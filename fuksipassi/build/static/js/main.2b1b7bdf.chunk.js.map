{"version":3,"sources":["RegisterDialog.js","CollectionCreation.js","Login.js","Settings.js","ProfileDialog.js","UserList.js","CardCompletionDialog.js","CardDeletionDialog.js","Card.js","ChallengeCreationDialog.js","ChallengeList.js","Tutorial.js","App.js","serviceWorker.js","index.js"],"names":["RegisterForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleHotkey","e","keyCode","onClose","state","checked","areaFound","handleRegister","handleChange","name","event","setState","defineProperty","target","value","handleCancel","user","email","password","area","areaPassNeeded","areaPass","fetch","credentials","headers","Content-Type","method","body","JSON","stringify","then","res","json","message","checkArea","window","removeEventListener","addEventListener","react_default","a","createElement","Dialog","open","DialogTitle","DialogContent","TextField","label","onChange","Button","onClick","ThumbDown_default","color","ThumbUp_default","DialogActions","variant","disabled","React","Component","CollectionForm","length","handleCheckBox","passBool","area_pass","Content-type","handleErrors","response","ok","classes","Typography","className","typography","FormGroup","row","FormControlLabel","control","Checkbox","inputProps","aria-label","withStyles","theme","root","display","paddingTop","paddingBottom","align","LoginForm","handleKeypress","login","focus","emailInput","current","passwordInput","loginInput","auth","token","onAuthenticate","status","showUserReg","showAdminReg","toggleUserRegister","toggleAdminRegister","createRef","bind","assertThisInitialized","Paper","style","width","padding","inputRef","type","autoComplete","margin","justifyContent","backgroundColor","buttonRef","id","RegisterDialog","CollectionCreation","Settings","handleSaving","sorting","handleBarColorChange","barColor","hex","handleCardColorChange","cardColor","handleSortingChange","onSave","ascended","descended","lib","onChangeComplete","FormControl","RadioGroup","Radio","ProfileDialog","handleClose","handleDelete","onDelete","userId","field","mode","Authorization","cache","alert","handleUpdate","validateInputs","role","onEdit","editor","admin","forceUpdate","emailAndPass","some","elem","includes","targetUser","currentUser","handleDialog","FormLabel","UserList","openEditDialog","showEdit","closeEditDialog","handleUserDelete","remainingUsers","users","i","splice","_this2","_this3","src_ProfileDialog","map","key","border","CompletionDialog","handleUpload","files","size","disableComplete","file","handleComplete","onComplete","title","gutterBottom","component","ref","input","fileInput","onDragOver","preventDefault","stopPropagation","onDrop","borderStyle","height","onCancel","DeletionDialog","KeyCode","onDeletion","handleDeletion","ExpandableCard","handleCompletion","onCompletion","challenge","challengeId","handleDeletionDialog","showDelDialog","handleExpansion","expanded","showDialog","showCompDialog","download","image","link","document","setAttribute","href","concat","appendChild","click","undoneCard","Card","card","alt","thumbtack","src","CardContent","CardActions","actions","IconButton","classnames","expand","expandOpen","aria-expanded","ExpandMore_default","Collapse","in","timeout","unmountOnExit","paragraph","description","unverifiedCard","media","img","data","pendingCard","info","onVerify","doneCard","date","prevProps","CardCompletionDialog","CardDeletionDialog","flex","alignItems","minWidth","maxWidth","maxHeight","marginLeft","marginRight","position","top","right","transform","transition","transitions","create","duration","shortest","CreationDialog","handleCreation","fields","multiline","ChallengeList","tabVal","tabValue","getChallenges","loggedOut","url","mounted","array","push","challenges","sortByName","sortingType","doneChall","Array","unverifiedChall","pendingChall","onLogout","undoneChall","handleCreationClick","showCreatDialog","handleVerification","handleEntryDeletion","entry_object","form_data","FormData","append","sorted","slice","sort","b","localeCompare","handleTabChange","newValue","listStyleType","src_Card","_this4","_id","_this5","AppBar","appbar","Tabs","TabIndicatorProps","centered","Tab","undoneContent","pendingContent","unverifiedContent","doneContent","Fab","bottom","Add_default","ChallengeCreationDialog","Tutorial","App","handleProfile","handleLogout","handleUserList","handleSettings","setAuthenticate","auth_user","localStorage","setItem","session_obj","timestamp","Date","getTime","editProfile","clear","handleEdit","updatedUser","handleHelp","showHelp","handleDrawerToggle","openDrawer","showSettings","showUsers","handleUndo","previousCardColor","previousBarColor","undo","redo","handleRedo","handleSettingsSave","setUndo","getItem","parse","login_time","setMinutes","getMinutes","src_Settings","src_UserList","src_Tutorial","Drawer","MenuItem","Menu_default","Input_default","AccountCircle_default","Undo_default","Redo_default","Help_default","src_ChallengeList","Grid","container","spacing","direction","justify","minHeight","item","xs","Login","Boolean","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2b1b7bdf.chunk.js","sourcesContent":["import React from \"react\";\r\nimport  {Dialog, DialogActions, DialogContent,DialogTitle,TextField,Button} from \"@material-ui/core\"\r\nimport DownIcon from \"@material-ui/icons/ThumbDown\";\r\nimport UpIcon from \"@material-ui/icons/ThumbUp\";\r\n\r\n// Component that handles registering.\r\nclass RegisterForm extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        email: \"\",\r\n        password: \"\",\r\n        area: \"\",\r\n        checked: false,\r\n        areaFound: false,\r\n        areaPassNeeded: false,\r\n        areaPass: \"\"\r\n      };\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      window.removeEventListener(\"keydown\", this.handleHotkey);\r\n    }\r\n    componentDidMount() {\r\n      window.addEventListener(\"keydown\", this.handleHotkey);\r\n    }\r\n    \r\n     // Handles the key press\r\n     handleHotkey = (e) =>{\r\n      // If ESC is pressed, close settings view.\r\n      if(e.keyCode == 27){\r\n        this.props.onClose();\r\n      } else if (e.keyCode == 13 && this.state.checked && this.state.areaFound){\r\n        this.handleRegister()\r\n      }\r\n    }   \r\n\r\n    // Handle text field changes\r\n    handleChange = name => event => {\r\n      this.setState({\r\n        [name]: event.target.value\r\n      });\r\n    };\r\n\r\n    // Close the popup window\r\n    handleCancel = () => {\r\n      this.props.onClose();\r\n    };\r\n\r\n    // Registers an user to the system.\r\n    handleRegister = () => {\r\n      // Create an user object\r\n      var user = {\r\n        email: this.state.email,\r\n        password: this.state.password,\r\n        area: this.state.area\r\n      };\r\n      if(this.state.areaPassNeeded){\r\n        user.areaPass = this.state.areaPass\r\n      }\r\n      // Send ajax call to server with username and password.\r\n      fetch(\"http://localhost:3000/api/user\", {\r\n        credentials: \"same-origin\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        method: \"POST\",\r\n        body: JSON.stringify(user)\r\n      })\r\n        .then(res => res.json())\r\n        .then(body => {\r\n          this.props.onClose(body.message);\r\n        });\r\n    };\r\n    \r\n    // Checks if area exists and if it needs password for registering into it.\r\n    checkArea = () =>{\r\n      fetch(\"http://localhost:3000/api/area/\"+this.state.area, {\r\n        credentials: \"same-origin\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        method: \"GET\"\r\n      })\r\n        .then(res => res.json())\r\n        .then(body => {\r\n          // If area was found, set state accordingly.\r\n          if(body.message == \"Area found\"){\r\n            this.setState({\r\n              areaFound: true,\r\n              checked: true,\r\n              areaPassNeeded: body.password\r\n            })\r\n          } else{\r\n            this.setState({\r\n              areaFound: false,\r\n              checked: true\r\n            })\r\n          }\r\n        });\r\n    }\r\n   \r\n\r\n    render() {\r\n      return (\r\n        <Dialog open={true}>\r\n          <DialogTitle> Register to Fuksipassi </DialogTitle>\r\n          <DialogContent>\r\n            <div>\r\n              <TextField\r\n                label=\"Email\"\r\n                onChange={this.handleChange(\"email\")}\r\n              />\r\n            </div>\r\n            <div>\r\n              <TextField\r\n                label=\"Password\"\r\n                onChange={this.handleChange(\"password\")}\r\n              />\r\n            </div>\r\n            <div>\r\n              <TextField\r\n                label=\"Area name\"\r\n                onChange={this.handleChange(\"area\")}\r\n              />\r\n              <Button onClick={this.checkArea}>Check</Button>\r\n              {!this.state.areaFound && this.state.checked && <DownIcon color=\"error\"></DownIcon>}\r\n              {this.state.areaFound && <UpIcon color=\"primary\"></UpIcon>}</div>\r\n              \r\n           \r\n            {this.state.areaPassNeeded && <TextField value={this.state.areaPass} onChange={this.handleChange(\"areaPass\")} label=\"Area password\"/>}\r\n          </DialogContent>\r\n\r\n          <DialogActions>\r\n          <Button\r\n              onClick={this.handleCancel}\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              onClick={this.handleRegister}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              disabled={!this.state.checked}\r\n            >\r\n              Register\r\n            </Button>\r\n            \r\n          </DialogActions>\r\n        </Dialog>\r\n      );\r\n    }\r\n  }\r\n  export default RegisterForm;","import React from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  TextField,\r\n  Button,\r\n  Checkbox,\r\n  Typography,\r\n  FormControlLabel,\r\n  FormGroup\r\n} from \"@material-ui/core\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: \"flex\"\r\n  },\r\n  typography: {\r\n    paddingTop: \"20px\",\r\n    paddingBottom: \"5px\",\r\n    color: \"primary\",\r\n    align: \"center\"\r\n  }\r\n});\r\n// Component that handles registering.\r\nclass CollectionForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      // User given email\r\n      email: \"\",\r\n      // User given password\r\n      password: \"\",\r\n      // User given area name\r\n      area: \"\",\r\n      // User given area password\r\n      area_pass: \"\",\r\n      // Toggles the password text field\r\n      passBool: false\r\n    };\r\n  }\r\n  // Remove event listener when unmounting.\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"keydown\", this.handleHotkey);\r\n  }\r\n  // Add key listener when mounting.\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.handleHotkey);\r\n  }\r\n\r\n  // Handles the key press\r\n  handleHotkey = e => {\r\n    // If ESC is pressed, close settings view.\r\n    if (e.keyCode == 27) {\r\n      this.props.onClose();\r\n    } else if (e.keyCode == 13) {\r\n      // If the information for challenge has been set, allow to continue.\r\n      if (this.state.email.length > 0 && this.state.password.length > 0 && this.state.area.length > 0) {\r\n        this.handleRegister();\r\n      }\r\n    }\r\n  };\r\n\r\n  // Handle text field changes\r\n  handleChange = name => event => {\r\n    this.setState({\r\n      [name]: event.target.value\r\n    });\r\n  };\r\n\r\n  // Handles checkbox to toggle password text field\r\n  handleCheckBox = () => {\r\n    this.setState({\r\n      passBool: !this.state.passBool\r\n    });\r\n  };\r\n\r\n  // Close the popup window\r\n  handleCancel = () => {\r\n    this.props.onClose();\r\n  };\r\n\r\n  // Registers an user to the system.\r\n  handleRegister = () => {\r\n    // Create an user object\r\n    var user = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      area: this.state.area\r\n    };\r\n    if (this.state.area_pass.length > 0) {\r\n      user.areaPass = this.state.area_pass;\r\n    }\r\n    // Send ajax call to server with username and password.\r\n    fetch(\"http://localhost:3000/api/admin\", {\r\n      credentials: \"same-origin\",\r\n      headers: {\r\n        \"Content-type\": \"application/json\"\r\n      },\r\n      method: \"POST\",\r\n      body: JSON.stringify(user)\r\n    })\r\n      .then(res => this.handleErrors(res))\r\n      .then(res => res.json())\r\n      .then(body => {\r\n        this.props.onClose(body.message);\r\n      });\r\n  };\r\n  // Handles errors when signing up.\r\n  handleErrors = response => {\r\n    if (!response.ok) {\r\n      this.props.onClose();\r\n    }\r\n    return response;\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <Dialog open={true}>\r\n        <DialogTitle> Create a new area </DialogTitle>\r\n        <DialogContent>\r\n          <div>\r\n            Create a new area to store your upcoming challenges and become the admin user of the\r\n            area.\r\n          </div>\r\n          <Typography className={classes.typography}>\r\n            <b>User </b>\r\n          </Typography>\r\n          <div>\r\n            <TextField label=\"Email\" onChange={this.handleChange(\"email\")} />\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              label=\"Password\"\r\n              onChange={this.handleChange(\"password\")}\r\n            />\r\n          </div>\r\n          <Typography className={classes.typography}>\r\n            <b>Area</b>\r\n          </Typography>\r\n\r\n          <TextField label=\"Name\" onChange={this.handleChange(\"area\")} />\r\n          <FormGroup row>\r\n            <FormControlLabel\r\n            control={\r\n            <Checkbox\r\n            onChange={this.handleCheckBox}\r\n            inputProps={{\r\n              \"aria-label\": \"primary checkbox\"\r\n            }}\r\n            value={this.state.passBool}\r\n          />\r\n            }\r\n            label=\"Password protected\"\r\n           />\r\n          </FormGroup>\r\n          \r\n          {this.state.passBool && (\r\n            <TextField\r\n              disabled={!this.state.passBool}\r\n              label=\"Password\"\r\n              onChange={this.handleChange(\"area_pass\")}\r\n            />\r\n          )}\r\n        </DialogContent>\r\n\r\n        <DialogActions>\r\n        <Button\r\n            onClick={this.handleCancel}\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            onClick={this.handleRegister}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n            Register\r\n          </Button>\r\n          \r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\nCollectionForm.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\nexport default withStyles(styles)(CollectionForm);\r\n","import RegisterForm from \"./RegisterDialog.js\";\r\nimport CollectionForm from \"./CollectionCreation.js\";\r\nimport React from \"react\";\r\n\r\nimport { TextField, Button, Paper, Typography } from \"@material-ui/core/\";\r\n\r\n// Component to display login\r\nclass LoginForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      // User's email\r\n      email: \" \",\r\n      // User's password\r\n      password: \"\",\r\n      // Toggle for user registration dialog\r\n      showUserReg: false,\r\n      // Toggle for adming registration dialog\r\n      showAdminReg: false,\r\n      // Shows a message to user, for example indicating a failure or success\r\n      message: \"\",\r\n      // Indicates which component if selected\r\n      focus: 0\r\n    };\r\n    this.emailInput = React.createRef();\r\n    this.passwordInput = React.createRef();\r\n    this.loginInput = React.createRef();\r\n    this.handleRegister = this.handleRegister.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    this.emailInput.current.focus();\r\n    // Add event listener to listen for enter key presses.\r\n    window.addEventListener(\"keydown\", this.handleKeypress);\r\n  }\r\n  componentWillUnmount() {\r\n    // Removing event listener when unmounting.\r\n    window.removeEventListener(\"keydown\", this.handleKeypress);\r\n  }\r\n  // Handles Enter key press and logs the user in.\r\n  handleKeypress = e => {\r\n    if (\r\n      e.keyCode == 13 &&\r\n      this.state.email != \"\" &&\r\n      this.state.password != \"\"\r\n    ) {\r\n      this.login();\r\n      // Happens when up arrow is pressed\r\n    } else if (e.keyCode == 38) {\r\n      // Check which element is focused and don't let the number go negative\r\n      if (this.state.focus > 0) {\r\n        this.setState({ focus: this.state.focus - 1 });\r\n        this.focus(this.state.focus);\r\n       \r\n      }\r\n      // Happens when down arrow is pressed\r\n    } else if (e.keyCode == 40) {\r\n      // Limits from going out of bounds\r\n      if (this.state.focus < 2) {\r\n        this.setState({ focus: this.state.focus + 1 });\r\n        // Call focusing method\r\n        this.focus(this.state.focus);\r\n      }\r\n    }\r\n  };\r\n  \r\n  // Focuses element according to the given value\r\n  focus = value => {\r\n    // If value is 0, focus on email field\r\n    if (value == 0) {\r\n      this.emailInput.current.focus();\r\n      // If value is 1, focus on password field\r\n    } else if (value == 1) {\r\n      this.passwordInput.current.focus();\r\n      // Focus on login button\r\n    } else {\r\n      this.loginInput.current.focus();\r\n    } \r\n  };\r\n  // Calls parent component method to when the user has logged in.\r\n  auth = (user, token) => {\r\n    this.props.onAuthenticate(user, token);\r\n  };\r\n\r\n  // Logs the user in.\r\n  login = event => {\r\n    // Create an user object\r\n    var user = {\r\n      email: this.state.email,\r\n      password: this.state.password\r\n    };\r\n    // Send ajax call to server with username and password.\r\n    fetch(\"http://localhost:5000/api/login\", {\r\n      credentials: \"same-origin\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      method: \"POST\",\r\n      body: JSON.stringify(user)\r\n    }).then(res => {\r\n      res.json().then(body => {\r\n        if (res.status === 200) {\r\n          this.auth(body.user, body.token);\r\n        } else {\r\n          this.setState({\r\n            message: body.message\r\n          });\r\n        }\r\n      });\r\n    });\r\n  };\r\n  // Handle text field changes\r\n  handleChange = name => event => {\r\n    this.setState({\r\n      [name]: event.target.value\r\n    });\r\n  };\r\n  // Called when registration is done. Update state of message and close registration tab.\r\n  handleRegister = message => {\r\n    this.setState({\r\n      message: message,\r\n      showUserReg: false,\r\n      showAdminReg: false\r\n    });\r\n  };\r\n  // Handles the opening and closing of registration tab.\r\n  toggleUserRegister = event => {\r\n    this.setState({\r\n      showUserReg: !this.state.showUserReg\r\n    });\r\n  };\r\n  // Handles the opening and closing of registration tab.\r\n  toggleAdminRegister = event => {\r\n    this.setState({\r\n      showAdminReg: !this.state.showAdminReg\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <Paper style={{ width: 350, padding: 20 }}>\r\n        <div>\r\n          <h1> Fuksipassi </h1>\r\n          <h3> Sign in </h3>\r\n          <Typography>{this.state.message}</Typography>\r\n\r\n          <div>\r\n            <TextField\r\n              inputRef={this.emailInput}\r\n              label=\"Email\"\r\n              style={{ width: 300 }}\r\n              type=\"email\"\r\n              autoComplete=\"email\"\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              value={this.state.email}\r\n              onChange={this.handleChange(\"email\")}\r\n            />\r\n          </div>\r\n          <TextField\r\n            inputRef={this.passwordInput}\r\n            label=\"Password\"\r\n            style={{ width: 300, justifyContent: \"center\" }}\r\n            type=\"password\"\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n            value={this.state.password}\r\n            onChange={this.handleChange(\"password\")}\r\n          />\r\n\r\n          <div>\r\n            <Button\r\n              onClick={this.login}\r\n              style={{ backgroundColor: \"Lavender\" }}\r\n              variant=\"contained\"\r\n              buttonRef={this.loginInput}\r\n            >\r\n              Login\r\n            </Button>\r\n          </div>\r\n          <div>\r\n            <div>\r\n              <p\r\n                id=\"signup\"\r\n                onClick={this.toggleUserRegister}\r\n                style={{ color: \"blue\" }}\r\n              >\r\n                Create an account?\r\n              </p>\r\n              {this.state.showUserReg && (\r\n                <RegisterForm onClose={this.handleRegister} />\r\n              )}\r\n            </div>\r\n            <div>\r\n              <p\r\n                id=\"signup\"\r\n                onClick={this.toggleAdminRegister}\r\n                style={{ color: \"blue\" }}\r\n              >\r\n                Create an area?\r\n              </p>\r\n              {this.state.showAdminReg && (\r\n                <CollectionForm onClose={this.handleRegister} />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\nexport default LoginForm;\r\n","import { SketchPicker } from \"react-color\";\r\nimport React from \"react\";\r\nimport {\r\n  Typography,\r\n  Button,\r\n  Paper,\r\n  FormControl,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  Radio\r\n} from \"@material-ui/core\";\r\n\r\nclass Settings extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      barColor: this.props.barColor,\r\n      sorting: this.props.sorting,\r\n      cardColor: this.props.cardColor\r\n    };\r\n    this.ascended = React.createRef();\r\n    this.descended = React.createRef();\r\n  }\r\n  // Removing key listener when unmounting.\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"keydown\", this.handleHotkey);\r\n  }\r\n  // Adding key listener when mounting.\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.handleHotkey);\r\n  }\r\n\r\n  // Handles the key press\r\n  handleHotkey = e => {\r\n    // If ESC is pressed, close settings view.\r\n    if (e.keyCode == 27) {\r\n      this.props.onClose();\r\n    } else if (e.keyCode == 13) {\r\n      this.handleSaving();\r\n    } else if (e.keyCode == 38 || e.keyCode == 40) {\r\n      this.setState({ sorting: !this.state.sorting });\r\n    }\r\n  };\r\n  // Handles the color change of app bar\r\n  handleBarColorChange = color => {\r\n    this.setState({\r\n      barColor: color.hex\r\n    });\r\n  };\r\n  // Handles the card color change\r\n  handleCardColorChange = color => {\r\n    this.setState({\r\n      cardColor: color.hex\r\n    });\r\n  };\r\n  // Handles the radio button change of sorting types.\r\n  handleSortingChange = event => {\r\n    let value = event.target.value;\r\n    // If edited value is sorting radio buttons, determine which value needs to be set.\r\n    value = event.target.value == \"ascending\" ? 1 : 0;\r\n    this.setState({\r\n      sorting: value\r\n    });\r\n  };\r\n  // Handles the parent function calling with appropriate parameters.\r\n  handleSaving = () => {\r\n    this.props.onSave(\r\n      this.state.sorting,\r\n      this.state.barColor,\r\n      this.state.cardColor\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Paper>\r\n        <div style={{ display: \"flex\" }}>\r\n          <div style={{ margin: \"20px\" }}>\r\n            <Typography>Theme color</Typography>\r\n            <SketchPicker\r\n              color={this.state.barColor}\r\n              onChangeComplete={ this.handleBarColorChange}\r\n            />\r\n          </div>\r\n          <div style={{ margin: \"20px\" }}>\r\n            <Typography>Challenge card color</Typography>\r\n            <SketchPicker\r\n              color={this.state.cardColor}\r\n              onChangeComplete={this.handleCardColorChange}\r\n            />\r\n          </div>\r\n\r\n          <div style={{ margin: \"20px\" }}>\r\n            <FormControl>\r\n              <Typography> Sort challenges </Typography>\r\n              <RadioGroup\r\n                value={this.state.sorting ? \"ascending\" : \"descending\"}\r\n                onChange={this.handleSortingChange}\r\n              >\r\n                <FormControlLabel\r\n                  value=\"ascending\"\r\n                  control={<Radio />}\r\n                  label=\"A-Z\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"descending\"\r\n                  control={<Radio />}\r\n                  label=\"Z-A\"\r\n                />\r\n              </RadioGroup>\r\n            </FormControl>\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <Button\r\n            onClick={this.props.onClose}\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            style={{ margin: \"10px\" }}\r\n          >\r\n            Go back\r\n          </Button>\r\n          <Button\r\n            onClick={this.handleSaving}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{ margin: \"10px\" }}\r\n          >\r\n            Save\r\n          </Button>\r\n        </div>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Settings;\r\n","import React from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  TextField,\r\n  Button,\r\n  FormControl,\r\n  FormLabel,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  Radio\r\n} from \"@material-ui/core\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: \"flex\"\r\n  },\r\n  typography: {\r\n    paddingTop: \"20px\",\r\n    paddingBottom: \"5px\",\r\n    color: \"primary\",\r\n    align: \"center\"\r\n  }\r\n});\r\n// A dialog component to edit selected user.\r\nclass ProfileDialog extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let user = this.props.targetUser;\r\n    this.state = {\r\n      // The user that is sent back to parent component after editing.\r\n      user: user,\r\n      // The email that the user chooses\r\n      email: user.email,\r\n      // User given password\r\n      password: \"\",\r\n      // User given role\r\n      role: user.role,\r\n      // Boolean value to check if user is admin or not.\r\n      admin: this.props.currentUser.role,\r\n      // The user that is editing\r\n      editor: this.props.currentUser\r\n    };\r\n  }\r\n  // Calls method from parent component to close the dialog.\r\n  handleClose = () => {\r\n    this.props.onClose();\r\n  };\r\n\r\n  // Calls parent component's deletion method with the user id.\r\n  handleDelete = () => {\r\n    this.props.onDelete(this.state.user.userId);\r\n  };\r\n\r\n  // Handles the value changes and saves the edited data into its corresponding variable in state.\r\n  handleChange = field => event => {\r\n    let value = event.target.value;\r\n    // If the field is role, then value has to be formatted into an integer.\r\n    value =\r\n      field == \"role\"\r\n        ? event.target.value == \"admin\"\r\n          ? 1\r\n          : 0\r\n        : event.target.value;\r\n\r\n    this.setState({\r\n      [field]: value\r\n    });\r\n  };\r\n\r\n  // Makes an AJAX call to server with the id of who needs to be deleted.\r\n  handleDelete = () => {\r\n    fetch(\"http://localhost:3000/api/user/\" + this.state.user.userId, {\r\n      method: \"DELETE\",\r\n      mode: \"cors\",\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: \"Bearer \" + this.props.token\r\n      },\r\n      cache: \"no-cache\"\r\n    }).then(res => {\r\n      res.json().then(body => {\r\n        // If deletion is succesfull, log out the current user.\r\n        if (res.status == 200) {\r\n          this.props.onDelete(this.state.user.userId);\r\n        } else {\r\n          // If deletion failed, show error message.\r\n          alert(body.message);\r\n        }\r\n      });\r\n    });\r\n  };\r\n\r\n  // Handles dialog user editing. Gets updated user data from dialog component\r\n  handleUpdate = () => {\r\n    // Validate user inputs before sending the edit to the server.\r\n    if (this.validateInputs()) {\r\n      // Initialize the edited user.\r\n      let user = this.state.user;\r\n      user.email = this.state.email;\r\n      // If password has been edited (when it's not empty), set user password as the edited one.\r\n      if (this.state.password != \"\") user.password = this.state.password;\r\n\r\n      user.role = this.state.role;\r\n\r\n      fetch(\"http://localhost:3000/api/user/\" + user.userId, {\r\n        method: \"PATCH\",\r\n        mode: \"cors\",\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n          Authorization: \"Bearer \" + this.props.token\r\n        },\r\n        cache: \"no-cache\",\r\n        body: JSON.stringify(user)\r\n      }).then(res => {\r\n        res.json().then(body => {\r\n          if(res.status == 200){\r\n            this.props.onEdit(body.user.email);\r\n          } else{\r\n            alert(body.message)\r\n          }\r\n        \r\n        });\r\n      });\r\n      // If user is changing their own role, then log out after changes.\r\n      if(this.state.editor.userId == this.state.user.userId && this.state.admin != user.role){\r\n        this.props.onDelete();\r\n      }\r\n      // Close dialog.\r\n      this.handleClose();\r\n    } else {\r\n      // Alert about the forbidden char's\r\n      alert(\"Forbidden characters found from input.\");\r\n      // Reset the text fields.\r\n      this.setState({\r\n        email: this.state.user.email,\r\n        password: \"\"\r\n      });\r\n      // Force update so the dialog updates the fields correctly.\r\n      this.forceUpdate();\r\n    }\r\n  };\r\n\r\n  // Validates that the email or password don't have blacklisted characters.\r\n  validateInputs = () => {\r\n    var filter = [\"$\", \"{\", \"}\", \"[\", \"]\"];\r\n    var emailAndPass = this.state.email + this.state.password;\r\n    // If emailAndPass would contain any of the characters found in filter, return false.\r\n    if (filter.some(elem => emailAndPass.includes(elem))) {\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  // Set user into state\r\n  render() {\r\n    return (\r\n      <Dialog open={true} onClose={this.handleDialog}>\r\n        <DialogTitle> Edit user information </DialogTitle>\r\n        <DialogContent>\r\n          <div>\r\n            <TextField\r\n              value={this.state.email}\r\n              margin=\"normal\"\r\n              label=\"Email\"\r\n              type=\"email\"\r\n              onChange={this.handleChange(\"email\")}\r\n            />\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              value={this.state.password}\r\n              margin=\"normal\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              onChange={this.handleChange(\"password\")}\r\n            />\r\n          </div>\r\n          {/* Show optional editing fields if the user is admin */}\r\n          {this.state.admin ? (\r\n            <div>\r\n              <FormControl>\r\n                <FormLabel> Role </FormLabel>\r\n                <RadioGroup\r\n                  value={this.state.role ? \"admin\" : \"basic\"}\r\n                  onChange={this.handleChange(\"role\")}\r\n                >\r\n                  <FormControlLabel\r\n                    value=\"admin\"\r\n                    control={<Radio />}\r\n                    label=\"Admin\"\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"basic\"\r\n                    control={<Radio />}\r\n                    label=\"Basic\"\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </div>\r\n          ) : null}\r\n        </DialogContent>\r\n\r\n        <DialogActions>\r\n          <Button\r\n            onClick={this.handleDelete}\r\n            style={{ backgroundColor: \"red\" }}\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            \r\n          >\r\n            Unregister\r\n          </Button>\r\n          <Button\r\n            onClick={this.handleClose}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={this.handleUpdate} variant=\"contained\" color=\"primary\">\r\n            Edit\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\nProfileDialog.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\nexport default withStyles(styles)(ProfileDialog);\r\n","import React from \"react\";\r\nimport { Typography, Button, Paper } from \"@material-ui/core\";\r\nimport ProfileDialog from \"./ProfileDialog\";\r\n\r\nclass UserList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      // Array of users in the area.\r\n      users: [],\r\n      // Message to display to page user in case there is a problem etc.\r\n      message: \"\",\r\n      // Toggle to show editing dialog.\r\n      showEdit: false\r\n    };\r\n  }\r\n  // Removing event listener when unmounting.\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"keydown\", this.handleHotkey);\r\n  }\r\n  // When component mounts, fetch users of the area.\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.handleHotkey);\r\n    fetch(\"http://localhost:3000/api/user\", {\r\n      method: \"GET\",\r\n      mode: \"cors\",\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: \"Bearer \" + this.props.token\r\n      },\r\n      cache: \"no-cache\"\r\n    }).then(res => {\r\n      if (res.ok) {\r\n        res.json().then(body => {\r\n          // Set the current user as the user that was returned as response.\r\n          this.setState({\r\n            users: body.users\r\n          });\r\n        });\r\n      } else {\r\n        this.setState({ message: \"Your area has everything but users.\" });\r\n      }\r\n    });\r\n  }\r\n  // Handles the opening of edit dialog. Gets user as a parameter.\r\n  openEditDialog = user => {\r\n    this.setState({\r\n      targetUser: user,\r\n      showEdit: true\r\n    });\r\n  };\r\n  // Closes edit dialog\r\n  closeEditDialog = () => {\r\n    this.setState({\r\n      showEdit: false\r\n    });\r\n  };\r\n  // Handles the key press\r\n  handleHotkey = (e) =>{\r\n    // If ESC is pressed, close the user list.\r\n    if(e.keyCode == 27){\r\n      this.props.onClose();\r\n    }\r\n  }\r\n  // Handles the user deleting\r\n  handleUserDelete = id => {\r\n    // Copy the user array\r\n    let remainingUsers = this.state.users;\r\n    // Loop through it\r\n    for (var i = 0; i < remainingUsers.length; i++) {\r\n      // When correct id is found, remove the user from the array\r\n      if (remainingUsers[i].userId == id) {\r\n        remainingUsers.splice(i, 1);\r\n        // Update state.\r\n        this.setState({\r\n          users: remainingUsers,\r\n          showEdit: false\r\n        });\r\n      }\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <Paper>\r\n        {this.state.showEdit && (\r\n          <ProfileDialog\r\n            targetUser={this.state.targetUser}\r\n            currentUser={this.props.user}\r\n            token={this.props.token}\r\n            onClose={this.closeEditDialog}\r\n            onDelete={this.handleUserDelete}\r\n            onEdit={this.closeEditDialog}\r\n          />\r\n        )}\r\n        <div>\r\n          <Typography>List of users in your area</Typography>\r\n          <Typography>\r\n            Number of users: <b>{this.state.users.length}</b>\r\n          </Typography>\r\n          <table>\r\n          <tbody>\r\n            <tr>\r\n              <th>Username</th>\r\n              <th>Role</th>\r\n              <th />\r\n            </tr>\r\n\r\n            {this.state.users.map(user => (\r\n              \r\n                <tr key={user.userId}>\r\n                  <td style={{ border: \"1px solid #ddd\", padding: \"8px\" }}>\r\n                    {user.email}\r\n                  </td>\r\n                  <td style={{ border: \"1px solid #ddd\", padding: \"8px\" }}>\r\n                    {user.role ? <p>Admin</p> : <p>Basic</p>}\r\n                  </td>\r\n                  <td style={{ border: \"1px solid #ddd\", padding: \"8px\" }}>\r\n                    <Button onClick={() => this.openEditDialog(user)}>\r\n                      Edit\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n             \r\n            ))}\r\n             </tbody>\r\n          </table>\r\n          <Button\r\n            onClick={this.props.onClose}\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            style={{ margin: \"10px\" }}\r\n          >\r\n            Go back\r\n          </Button>\r\n        </div>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserList;\r\n","import React from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Typography,\r\n  Button\r\n} from \"@material-ui/core\";\r\n\r\n// Component that handles registering.\r\nclass CompletionDialog extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      // Challenge title\r\n      title: this.props.title,\r\n      // Image file that was uploaded\r\n      file: \"\",\r\n      // Message which informs the user about errors etc.\r\n      message: \"\",\r\n      // Toggle to disable complete-button. Used if file is too large or if there is no file.\r\n      disableComplete: true\r\n    };\r\n  }\r\n\r\n  // Handle image upload changes\r\n  handleUpload = event => {\r\n    // If file is not present, set message to empty.\r\n    if (typeof event.target.files[0] === \"undefined\") {\r\n      this.setState({\r\n        message: \"\"\r\n      });\r\n      // If file is small enough (under 2MB)\r\n    } else if (event.target.files[0].size / 1024 / 1024 < 2) {\r\n        this.setState({\r\n          disableComplete: false,\r\n          file: event.target.files,\r\n          message: \"\"\r\n        });\r\n      } else {\r\n        // If file is too big, set message.\r\n        this.setState({\r\n          message: \"File size exceeds limits.\"\r\n        });\r\n      }\r\n    \r\n  };\r\n  // Completes the challenge and send the file to parent component.\r\n  handleComplete = () => {\r\n    this.props.onComplete(this.state.file);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Dialog open={true}>\r\n        <DialogTitle> Complete challenge </DialogTitle>\r\n        <DialogContent>\r\n          {this.state.title}\r\n          <p>Upload image as a proof of completion</p>\r\n          <Typography\r\n            gutterBottom\r\n            variant=\"h6\"\r\n            component=\"h2\"\r\n            color=\"secondary\"\r\n          >\r\n            {this.state.message}\r\n          </Typography>\r\n          <div>\r\n            <input\r\n              type=\"file\"\r\n              id=\"file-browser input\"\r\n              name=\"file-browser-input\"\r\n              ref={input => (this.fileInput = input)}\r\n              onDragOver={e => {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n              }}\r\n              onDrop={this.handleUpload}\r\n              onChange={this.handleUpload}\r\n              style={{ borderStyle: \"dashed\", width: 400, height: 50 }}\r\n            />\r\n            <div>\r\n              Drag image here or browse from folders (size limit is 2 MB)\r\n            </div>\r\n          </div>\r\n        </DialogContent>\r\n\r\n        <DialogActions>\r\n          <Button\r\n            onClick={this.props.onCancel}\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            onClick={this.handleComplete}\r\n            variant=\"contained\"\r\n            disabled={this.state.disableComplete}\r\n            color=\"primary\"\r\n          >\r\n            Complete\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\nexport default CompletionDialog;\r\n","import React from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Button,\r\n  Typography\r\n} from \"@material-ui/core\";\r\n\r\n// Component that handles registering.\r\nclass DeletionDialog extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      // Challenge title\r\n      title: this.props.title\r\n    };\r\n  }\r\n  // Called when component is unmounting.\r\n  componentWillUnmount() {\r\n    // Removing key press listener\r\n    window.removeEventListener(\"keydown\", this.handleHotkey);\r\n  }\r\n  // Add key listener when mounting\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.handleHotkey);\r\n  }\r\n  \r\n   // Handles the key press\r\n   handleHotkey = (e) =>{\r\n    // If ESC is pressed, close the component\r\n    if(e.KeyCode == 27){\r\n      this.props.onClose();\r\n      // ENTER pressed to delete challenge\r\n    } else if(e.KeyCode == 13){\r\n      this.props.onDeletion();\r\n    }\r\n  }\r\n\r\n  // Handles the deletion selection.\r\n  handleDeletion = () => {\r\n    this.props.onDeletion();\r\n  };\r\n\r\n \r\n\r\n  render() {\r\n    return (\r\n      <Dialog open={true}>\r\n        <DialogTitle> Delete a challenge </DialogTitle>\r\n        <DialogContent>\r\n            <Typography><i>{this.state.title}</i></Typography>\r\n            Are you sure you want to delete this challenge? All information about the completions of this challenge will also be deleted.\r\n        </DialogContent>\r\n\r\n        <DialogActions>\r\n        <Button\r\n            onClick={this.props.onCancel}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            onClick={this.handleDeletion}\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n          >\r\n              Delete\r\n          </Button>\r\n         \r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\nexport default DeletionDialog;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport classnames from \"classnames\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CompletionDialog from \"./CardCompletionDialog.js\";\r\nimport DeletionDialog from \"./CardDeletionDialog.js\";\r\n// Styles applied to elements\r\nconst styles = theme => ({\r\n  card: {\r\n    backgroundColor: \"#FFFF88\",\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    minWidth: 350,\r\n    maxWidth: 500\r\n  },\r\n  media: {\r\n    maxHeight: 250,\r\n    maxWidth: 500,\r\n    paddingTop: \"5%\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    display: \"block\"\r\n  },\r\n  thumbtack: {\r\n    height: \"55px\",\r\n    maxWidth: \"57px\",\r\n    position: \"relative\",\r\n    top: \"15px\",\r\n    right: \"10px\",\r\n    display: \"block\"\r\n  },\r\n  actions: {\r\n    display: \"flex\"\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest\r\n    })\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\"\r\n  }\r\n});\r\nclass ExpandableCard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      // Type of card (undone, done, unverified, pending)\r\n      type: this.props.type,\r\n      // Challenge that is displayed in the card\r\n      challenge: this.props.challenge,\r\n      // Toggle to indicate if card is expanded\r\n      expanded: false,\r\n      // Toggle to show card completion dialog\r\n      showCompDialog: false,\r\n      // Toggle to show card deletion dialog\r\n      showDelDialog: false,\r\n      // Indicates if user is admin\r\n      admin: this.props.admin,\r\n      // Card color\r\n      cardColor: this.props.color\r\n    };\r\n  }\r\n  // When props are updated, compare them to previous and update state if needed.\r\n  componentDidUpdate(prevProps) {\r\n    // Check if challenge props have been updated.\r\n    if (prevProps.challenge !== this.props.challenge) {\r\n      this.setState({ challenge: this.props.challenge });\r\n    }\r\n    if(prevProps.color !== this.props.color){\r\n      this.setState({cardColor: this.props.color})\r\n    } \r\n  }\r\n  // Called when card is completed. Gets image file as a parameter\r\n  handleCompletion = file => {\r\n    this.handleDialog();\r\n    this.props.onCompletion(this.state.challenge.challengeId, file);\r\n  };\r\n  // Handles the deletion dialog opening and closing.\r\n  handleDeletionDialog = () => {\r\n    this.setState({\r\n      showDelDialog: !this.state.showDelDialog\r\n    });\r\n  };\r\n  // Handles the card deletion.\r\n  handleDeletion = () => {\r\n    this.props.onDeletion(this.state.challenge.challengeId);\r\n    // Close the deletion dialog.\r\n    this.handleDeletionDialog();\r\n  };\r\n  // Handles the expansion of the card\r\n  handleExpansion = () => {\r\n    this.setState({\r\n      expanded: !this.state.expanded,\r\n      showDialog: false\r\n    });\r\n  };\r\n  // Handles the card completion dialog opening and closing.\r\n  handleDialog = () => {\r\n    this.setState({\r\n      showCompDialog: !this.state.showCompDialog\r\n    });\r\n  };\r\n\r\n  // Downloads the given image\r\n  download = (name, image) => {\r\n    // Create a new <a> element\r\n    var link = document.createElement(\"a\");\r\n    // Set id to it\r\n    link.setAttribute(\"id\", name);\r\n    // Set image as the href\r\n    link.href = `data:image/jpeg;base64,${image}`;\r\n    // Set image name as the challenge title\r\n    link.download = name;\r\n    // Append the created element to body as invisible element\r\n    document.body.appendChild(link);\r\n    // Force a click on the link to download the image.\r\n    link.click();\r\n  };\r\n  // Function to render an undone card.\r\n  undoneCard = () => {\r\n    // Get classes as a constant\r\n    const { classes } = this.props;\r\n    return (\r\n      <Card className={classes.card} style={{backgroundColor: this.state.cardColor}}>\r\n        <img\r\n         alt=\"Thumbtack\"\r\n          className={classes.thumbtack}\r\n          src={process.env.PUBLIC_URL + \"/tack.png\"}\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n            {this.state.challenge.title}\r\n          </Typography>\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <IconButton\r\n            className={classnames(classes.expand, {\r\n              [classes.expandOpen]: this.state.expanded\r\n            })}\r\n            onClick={this.handleExpansion}\r\n            aria-expanded={this.state.expanded}\r\n          >\r\n            <ExpandMoreIcon />\r\n          </IconButton>\r\n          {this.state.admin == 0 ? (\r\n            <Button size=\"small\" color=\"primary\" onClick={this.handleDialog}>\r\n              Complete\r\n            </Button>\r\n          ) : null}\r\n\r\n          {this.state.admin == 1 ? (\r\n            <Button\r\n              size=\"small\"\r\n              color=\"primary\"\r\n              onClick={this.handleDeletionDialog}\r\n            >\r\n              Delete\r\n            </Button>\r\n          ) : null}\r\n        </CardActions>\r\n        <Collapse in={this.state.expanded} timeout=\"auto\" unmountOnExit>\r\n          <CardContent>\r\n            <Typography paragraph>\r\n              {this.state.challenge.description}\r\n            </Typography>\r\n          </CardContent>\r\n        </Collapse>\r\n      </Card>\r\n    );\r\n  };\r\n  // Function which returns an unverified card.\r\n  unverifiedCard = () => {\r\n    const { classes } = this.props;\r\n    return (\r\n      <Card className={classes.card} style={{backgroundColor: this.state.cardColor}}>\r\n        <img\r\n          alt=\"Thumbtack\"\r\n          className={classes.thumbtack}\r\n          src={process.env.PUBLIC_URL + \"/tack.png\"}\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n            {this.state.challenge.title}\r\n          </Typography>\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <IconButton\r\n            className={classnames(classes.expand, {\r\n              [classes.expandOpen]: this.state.expanded\r\n            })}\r\n            onClick={this.handleExpansion}\r\n            aria-expanded={this.state.expanded}\r\n          >\r\n            <ExpandMoreIcon />\r\n          </IconButton>\r\n          <Button\r\n            size=\"small\"\r\n            color=\"primary\"\r\n            onClick={() =>\r\n              this.props.onDelete(\r\n                this.props.userId,\r\n                this.state.challenge.challengeId\r\n              )\r\n            }\r\n          >\r\n            Delete\r\n          </Button>\r\n        </CardActions>\r\n        <Collapse in={this.state.expanded} timeout=\"auto\" unmountOnExit>\r\n          <CardContent>\r\n            <Typography paragraph>\r\n              {this.state.challenge.description}\r\n            </Typography>\r\n            <img\r\n              className={classes.media}\r\n              src={`data:image/jpeg;base64,${\r\n                this.state.challenge.image.img.data\r\n              }`}\r\n              alt=\"Proof of completion\"\r\n            />\r\n          </CardContent>\r\n        </Collapse>\r\n      </Card>\r\n    );\r\n  };\r\n  // Function which returns a pending card.\r\n  pendingCard = () => {\r\n    const { classes } = this.props;\r\n    return (\r\n      <Card className={classes.card} style={{backgroundColor: this.state.cardColor}}>\r\n        <img\r\n         alt=\"Thumbtack\"\r\n          className={classes.thumbtack}\r\n          src={process.env.PUBLIC_URL + \"/tack.png\"}\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n            {this.state.challenge.info.title}\r\n          </Typography>\r\n          <Typography>\r\n            <b>User:</b> {this.state.challenge.email}\r\n          </Typography>\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <IconButton\r\n            className={classnames(classes.expand, {\r\n              [classes.expandOpen]: this.state.expanded\r\n            })}\r\n            onClick={this.handleExpansion}\r\n            aria-expanded={this.state.expanded}\r\n          >\r\n            <ExpandMoreIcon />\r\n          </IconButton>\r\n          <Button\r\n            size=\"small\"\r\n            color=\"secondary\"\r\n            variant=\"contained\"\r\n            onClick={() =>\r\n              this.props.onDelete(\r\n                this.state.challenge.userId,\r\n                this.state.challenge.challengeId\r\n              )\r\n            }\r\n          >\r\n            Delete\r\n          </Button>\r\n\r\n          <Button\r\n            size=\"small\"\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={() =>\r\n              this.props.onVerify(\r\n                this.state.challenge.userId,\r\n                this.state.challenge.challengeId\r\n              )\r\n            }\r\n          >\r\n            Verify\r\n          </Button>\r\n        </CardActions>\r\n        <Collapse in={this.state.expanded} timeout=\"auto\" unmountOnExit>\r\n          <CardContent>\r\n            <Typography paragraph>\r\n              {this.state.challenge.info.description}\r\n            </Typography>\r\n            <img\r\n              className={classes.media}\r\n              src={`data:image/jpeg;base64,${this.state.challenge.img.data}`}\r\n              alt=\"Proof of completion\"\r\n            />\r\n          </CardContent>\r\n        </Collapse>\r\n      </Card>\r\n    );\r\n  };\r\n  // Function which returns a done card.\r\n  doneCard = () => {\r\n    const { classes } = this.props;\r\n    return (\r\n      <Card className={classes.card} style={{backgroundColor: this.state.cardColor}}>\r\n        <img\r\n         alt=\"Thumbtack\"\r\n          className={classes.thumbtack}\r\n          src={process.env.PUBLIC_URL + \"/tack.png\"}\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n            {this.state.challenge.title}\r\n          </Typography>\r\n          <Typography>\r\n            <b>Date of completion:</b> {this.state.challenge.image.date}\r\n          </Typography>\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <IconButton\r\n            className={classnames(classes.expand, {\r\n              [classes.expandOpen]: this.state.expanded\r\n            })}\r\n            onClick={this.handleExpansion}\r\n            aria-expanded={this.state.expanded}\r\n          >\r\n            <ExpandMoreIcon />\r\n          </IconButton>\r\n        </CardActions>\r\n        <Collapse in={this.state.expanded} timeout=\"auto\" unmountOnExit>\r\n          <CardContent>\r\n            <Typography>{this.state.challenge.description}</Typography>\r\n            <img\r\n              className={classes.media}\r\n              src={`data:image/jpeg;base64,${\r\n                this.state.challenge.image.img.data\r\n              }`}\r\n              alt=\"Proof of completion\"\r\n            />\r\n            <Button\r\n              onClick={() =>\r\n                this.download(\r\n                  this.state.challenge.title,\r\n                  this.state.challenge.image.img.data\r\n                )\r\n              }\r\n            >\r\n              Download image\r\n            </Button>\r\n          </CardContent>\r\n        </Collapse>\r\n      </Card>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.showCompDialog && (\r\n          <CompletionDialog\r\n            onCancel={this.handleDialog}\r\n            onComplete={this.handleCompletion}\r\n          />\r\n        )}\r\n        {this.props.type == 0 && this.undoneCard()}\r\n        {this.props.type == 1 && this.unverifiedCard()}\r\n        {this.props.type == 2 && this.pendingCard()}\r\n        {this.props.type == 3 && this.doneCard()}\r\n        {this.state.showDelDialog && (\r\n          <DeletionDialog\r\n            title={this.state.challenge.title}\r\n            onCancel={this.handleDeletionDialog}\r\n            onDeletion={this.handleDeletion}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nExpandableCard.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\nexport default withStyles(styles)(ExpandableCard);\r\n","import React from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  TextField,\r\n  Button,\r\n  Typography\r\n} from \"@material-ui/core\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: \"flex\"\r\n  },\r\n  typography: {\r\n    paddingTop: \"20px\",\r\n    paddingBottom: \"5px\",\r\n    color: \"primary\",\r\n    align: \"center\"\r\n  }\r\n});\r\n// Component that handles registering.\r\nclass CreationDialog extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      // Title for a challenge\r\n      title: \"\",\r\n      // Description for the challenge\r\n      description: \"\",\r\n      // Message to inform user if creation failed.\r\n      message: \"\"\r\n    };\r\n  }\r\n  // Remove key listener when unmounting.\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"keydown\", this.handleHotkey);\r\n  }\r\n  // Add event listener when mounting\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.handleHotkey);\r\n  }\r\n\r\n  // Handles the key press\r\n  handleHotkey = e => {\r\n    // If ESC is pressed, close settings view.\r\n    if (e.keyCode == 27) {\r\n      this.props.onClose();\r\n    } else if (e.keyCode == 13) {\r\n      // If the information for challenge has been set, allow to continue.\r\n      if (this.state.title.length > 0 && this.state.description.length > 0) {\r\n        this.handleCreation();\r\n      }\r\n    }\r\n  };\r\n\r\n  // Handle text field changes\r\n  handleChange = name => event => {\r\n    this.setState({\r\n      [name]: event.target.value\r\n    });\r\n  };\r\n\r\n  // Close the popup window\r\n  handleCancel = () => {\r\n    this.props.onClose();\r\n  };\r\n\r\n  // Called when challenge information has been given by the user and the challenge needs to be saved into database.\r\n  handleCreation = () => {\r\n    // Make a JSON object out of title and description\r\n    var challenge = {\r\n      title: this.state.title,\r\n      description: this.state.description\r\n    };\r\n    // Use fetch to POST an api request with challenge data.\r\n    fetch(\"http://localhost:3000/api/challenge\", {\r\n      credentials: \"same-origin\",\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: \"Bearer \" + this.props.token\r\n      },\r\n      method: \"POST\",\r\n      body: JSON.stringify(challenge)\r\n    }).then(res => {\r\n      // If api response is ok, close dialog.\r\n      if (res.ok) {\r\n        this.props.onClose();\r\n      } else {\r\n        // If response was not ok, set error message to state.\r\n        res.json(body => {\r\n          this.setState({\r\n            message: body.message\r\n          });\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <Dialog open={true}>\r\n        <DialogTitle> Challenge creation </DialogTitle>\r\n        <DialogContent>\r\n          <div>\r\n            Create a new challenge for users to complete. This challenge is only\r\n            going to be seen by members in your challenge area.\r\n          </div>\r\n          <Typography className={classes.typography}> Challenge </Typography>\r\n          <div>\r\n            <TextField\r\n              className={classes.fields}\r\n              label=\"Title\"\r\n              onChange={this.handleChange(\"title\")}\r\n            />\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              className={classes.fields}\r\n              label=\"Description\"\r\n              multiline={true}\r\n              onChange={this.handleChange(\"description\")}\r\n            />\r\n          </div>\r\n        </DialogContent>\r\n\r\n        <DialogActions>\r\n          <Button\r\n            onClick={this.handleCancel}\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            onClick={this.handleCreation}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n            Create\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\nCreationDialog.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\nexport default withStyles(styles)(CreationDialog);\r\n","import React from \"react\";\r\nimport ExpandableCard from \"./Card.js\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CreationDialog from \"./ChallengeCreationDialog.js\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst styles = theme => ({\r\n  appbar: {\r\n    color: \"#ffffff\"\r\n  }\r\n});\r\nclass ChallengeList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      // Color of the tabs and fab\r\n      barColor: this.props.color,\r\n      // Current user\r\n      user: this.props.user,\r\n      // Authorization token for API calls\r\n      token: this.props.token,\r\n      // Contains challenges that haven't been completed\r\n      undoneChall: [],\r\n      // Contains  challenges that have been completed and verified by admin\r\n      doneChall: [],\r\n      // Contains all pending challenges for the area (Admin view only)\r\n      pendingChall: [],\r\n      // Contains user specific challenges which he has completed but not yet gotten verified\r\n      unverifiedChall: [],\r\n      // The url of the api\r\n      url: \"http://localhost:3000/api/\",\r\n      // Tab's current value\r\n      tabValue: 0,\r\n      // Toggle for challenge creation dialog\r\n      showCreatDialog: false,\r\n      // Message to display when something goes wrong or needs to be announced\r\n      message: \"\",\r\n      // Boolean to see if component has been mounted or not.\r\n      mounted: false,\r\n      // Tells which way challenges are sorted\r\n      sortingType: this.props.sortingType\r\n    };\r\n  }\r\n  // Check if props have updated and update if needed.\r\n  componentDidUpdate(prevProps) {\r\n    // Check if color has been updated in props\r\n    if (prevProps.color !== this.props.color) {\r\n      this.setState({ barColor: this.props.color });\r\n      //Check if sorting type has been changed.\r\n    } else if (prevProps.sortingType !== this.props.sortingType) {\r\n      this.setState({ sortingType: this.props.sortingType });\r\n    }\r\n  }\r\n  // Remove event listener when unmounting and set state accordingly to prevent state mutation.\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"keydown\", this.handleHotkey);\r\n    this.setState({\r\n      mounted: false\r\n    });\r\n  }\r\n  // Add key listener when mounting component\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.handleHotkey);\r\n    this.setState({\r\n      mounted: true\r\n    });\r\n    // Fetch all challenges when mounting is done.\r\n    this.getChallenges();\r\n  }\r\n  // Gets the pressed key and checks the keycode of it.\r\n  handleHotkey = e => {\r\n    // If left arrow key is pressed, decrease tab value by one.\r\n    var tabVal = this.state.tabValue;\r\n    if (e.keyCode == 37) {\r\n      if (tabVal > 0) {\r\n        tabVal--;\r\n      }\r\n      this.setState({ tabValue: tabVal });\r\n      //If right arrow key is pressed, increase tab value by one.\r\n    } else if (e.keyCode == 39) {\r\n      if (\r\n        (tabVal < 2 && this.state.user.role == 0) ||\r\n        (tabVal < 1 && this.state.user.role)\r\n      ) {\r\n        tabVal++;\r\n      }\r\n      this.setState({ tabValue: tabVal });\r\n    }\r\n  };\r\n\r\n  // Fetches all challenges and sets them into state.\r\n  getChallenges = () => {\r\n    // Variable to see if the user needs to be logged out (due to server not responding)\r\n    var loggedOut = false;\r\n    // If the user's role is basic, then fetch incompleted, pending and done challenges.\r\n    if (this.state.user.role == 0) {\r\n      fetch(this.state.url + \"challenge/done/\" + this.state.user.userId, {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n          Authorization: \"Bearer \" + this.state.token\r\n        },\r\n        cache: \"no-cache\"\r\n      }).then(res => {\r\n        res.json().then(body => {\r\n          if (this.state.mounted && typeof body.data !== \"undefined\") {\r\n            var array = [];\r\n            // Move elements from two dimensional array to one dimensional\r\n            for (var i = 0; i < body.data.length; i++) {\r\n              array.push(body.data[i][0]);\r\n            }\r\n            // Sort challenges into the given order\r\n            var challenges = this.sortByName(this.state.sortingType, array);\r\n            this.setState({\r\n              doneChall: challenges\r\n            });\r\n          }\r\n        });\r\n      });\r\n\r\n      // Fetch challenges that are pending for only one user.\r\n      fetch(this.state.url + \"challenge/pending/\" + this.state.user.userId, {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n          Authorization: \"Bearer \" + this.state.token\r\n        },\r\n        cache: \"no-cache\"\r\n      }).then(res => {\r\n        res.json().then(body => {\r\n          // If challenge list is mounted and returned data is not undefined, continue.\r\n          if (this.state.mounted && typeof body.data !== \"undefined\") {\r\n            var array = new Array();\r\n            // Move elements from two dimensional array to one dimensional array\r\n            for (var i = 0; i < body.data.length; i++) {\r\n              array.push(body.data[i][0]);\r\n            }\r\n            // Sort challenges into the given order\r\n            var challenges = this.sortByName(this.state.sortingType, array);\r\n            // Set challenges to state.\r\n            this.setState({\r\n              unverifiedChall: challenges\r\n            });\r\n          }\r\n        });\r\n      });\r\n    } else {\r\n      // Fetch all challenges that are not verified (Admin only)\r\n      fetch(this.state.url + \"challenge/pending\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n          Authorization: \"Bearer \" + this.state.token\r\n        },\r\n        cache: \"no-cache\"\r\n      }).then(res => {\r\n        res.json().then(body => {\r\n          if (res.ok) {\r\n            // Check if component is mounted and if body is not undefined\r\n            if (this.state.mounted && typeof body.data !== \"undefined\") {\r\n              var array = new Array();\r\n              // Move elements from two dimensional array to one dimensional\r\n              for (var i = 0; i < body.data.length; i++) {\r\n                array.push(body.data[i][0]);\r\n              }\r\n              // Sort challenges into the given order\r\n              var challenges = this.sortByName(this.state.sortingType, array);\r\n              this.setState({\r\n                pendingChall: challenges\r\n              });\r\n            }\r\n          } else {\r\n            if (!loggedOut) {\r\n              this.props.onLogout();\r\n              loggedOut = true;\r\n            }\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n    // Fetch all challenges.\r\n    fetch(this.state.url + \"challenge/undone/\" + this.state.user.userId, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: \"Bearer \" + this.state.token\r\n      },\r\n      cache: \"no-cache\"\r\n    }).then(res => {\r\n      res.json().then(body => {\r\n        if (res.ok) {\r\n          // Check if component is mounted and if body is not undefined\r\n          if (this.state.mounted && typeof body.data !== \"undefined\") {\r\n            // Sort challenges into the given order\r\n            var challenges = this.sortByName(this.state.sortingType, body.data);\r\n            this.setState({\r\n              undoneChall: challenges\r\n            });\r\n          }\r\n        } else {\r\n          // If user has not been logged out before, do it now.\r\n          if (!loggedOut) {\r\n            this.props.onLogout();\r\n            // Set loggedOut as true.\r\n            loggedOut = true;\r\n          }\r\n        }\r\n      });\r\n    });\r\n  };\r\n  // Handles the clicks of the floating action button. Opens up the dialog.\r\n  handleCreationClick = () => {\r\n    // If creation dialog was open and this function was called again, get all challenges again.\r\n    if (this.state.showCreatDialog) {\r\n      this.getChallenges();\r\n    }\r\n    this.setState({\r\n      showCreatDialog: !this.state.showCreatDialog\r\n    });\r\n  };\r\n\r\n  // Deletes the selected challenge.\r\n  handleDeletion = challengeId => {\r\n    fetch(this.state.url + \"challenge/\" + challengeId, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: \"Bearer \" + this.state.token\r\n      },\r\n      cache: \"no-cache\"\r\n    }).then(res => {\r\n      // If response is okay, get challenges.\r\n      if (res.ok) {\r\n        this.getChallenges();\r\n      }\r\n    });\r\n  };\r\n  // Handles the verification of challenge. Only used by admins.\r\n  handleVerification = (userId, challengeId) => {\r\n    // Send API call with user id and challenge id.\r\n    fetch(this.state.url + \"challenge/verify/\" + userId + \"/\" + challengeId, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: \"Bearer \" + this.state.token\r\n      },\r\n      cache: \"no-cache\"\r\n    }).then(res => {\r\n      // Update challenges if response is ok.\r\n      if (res.ok) {\r\n        this.getChallenges();\r\n      }\r\n    });\r\n  };\r\n  // Handles the deletion of pending challenge.\r\n  handleEntryDeletion = (userId, challengeId) => {\r\n    fetch(this.state.url + \"entry/\" + userId + \"/\" + challengeId, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: \"Bearer \" + this.state.token\r\n      },\r\n      cache: \"no-cache\"\r\n    }).then(res => {\r\n      if (res.ok) {\r\n        this.getChallenges();\r\n      }\r\n    });\r\n  };\r\n  // Handles the completion of challenge. Gets image and challenge id as parameters.\r\n  handleCompletion = (challengeId, image) => {\r\n    // Creating a json object with needed data.\r\n    var entry_object = {\r\n      userId: this.state.user.userId,\r\n      challengeId: challengeId,\r\n      file: image[0]\r\n    };\r\n    // Creating form data object.\r\n    var form_data = new FormData();\r\n    // Appending data from entry_object into the form data object.\r\n    for (var name in entry_object) {\r\n      form_data.append(name, entry_object[name]);\r\n    }\r\n    // Sending API call with the form data object as the body.\r\n    fetch(this.state.url + \"entry\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + this.state.token\r\n      },\r\n      cache: \"no-cache\",\r\n      body: form_data\r\n    }).then(res => {\r\n      if (res.ok) {\r\n        this.getChallenges();\r\n      }\r\n    });\r\n  };\r\n\r\n  // Sorts the challenges by their name in alphabetical (Ascending or descending) order.\r\n  sortByName = (method, challenges) => {\r\n    // Copy the array from state.\r\n    let sorted = challenges.slice();\r\n    // Check that array is not empty\r\n    if (sorted.length > 0) {\r\n      // If the challenge array is formed differently, go here\r\n      if (typeof sorted[0].title == \"undefined\") {\r\n        if (method === 1) {\r\n          // Sort into ascending order.\r\n          sorted.sort((a, b) => {\r\n            return (\"\" + a.info.title).localeCompare(b.info.title);\r\n          });\r\n        } else {\r\n          // Sort into descending order.\r\n          sorted.sort((a, b) => {\r\n            return (\"\" + b.info.title).localeCompare(a.info.title);\r\n          });\r\n        }\r\n      } else {\r\n        if (method === 1) {\r\n          // Sort into ascending order.\r\n          sorted.sort((a, b) => {\r\n            return (\"\" + a.title).localeCompare(b.title);\r\n          });\r\n        } else {\r\n          // Sort into descending order.\r\n          sorted.sort((a, b) => {\r\n            return (\"\" + b.title).localeCompare(a.title);\r\n          });\r\n        }\r\n      }\r\n    }\r\n    // Return sorted challenges.\r\n    return sorted;\r\n  };\r\n  // Returns the cards for challenges that are done.\r\n  doneContent() {\r\n    return this.state.doneChall.map(challenge => (\r\n      <li\r\n        key={challenge.image.date}\r\n        style={{ margin: \"30px\", listStyleType: \"none\" }}\r\n      >\r\n        <div style={{ display: \" flex\", justifyContent: \"center\" }}>\r\n          <ExpandableCard\r\n            challenge={challenge}\r\n            type=\"3\"\r\n            color={this.props.cardColor}\r\n          />\r\n        </div>\r\n      </li>\r\n    ));\r\n  }\r\n  // Returns the cards for challenges that are pending.\r\n  unverifiedContent() {\r\n    return this.state.unverifiedChall.map(challenge => (\r\n      <li\r\n        key={challenge.image.date}\r\n        style={{ margin: \"30px\", listStyleType: \"none\" }}\r\n      >\r\n        <div style={{ display: \" flex\", justifyContent: \"center\" }}>\r\n          <ExpandableCard\r\n            challenge={challenge}\r\n            type=\"1\"\r\n            userId={this.state.user.userId}\r\n            onDelete={this.handleEntryDeletion}\r\n            color={this.props.cardColor}\r\n          />\r\n        </div>\r\n      </li>\r\n    ));\r\n  }\r\n  // Returns the cards for challenges that are pending.\r\n  pendingContent() {\r\n    if (\r\n      typeof this.state.pendingChall !== \"undefined\" &&\r\n      this.state.pendingChall.length > 0\r\n    ) {\r\n      return this.state.pendingChall.map(challenge => (\r\n        <li\r\n          key={challenge._id}\r\n          style={{ margin: \"30px\", listStyleType: \"none\" }}\r\n        >\r\n          <div style={{ display: \" flex\", justifyContent: \"center\" }}>\r\n            <ExpandableCard\r\n              challenge={challenge}\r\n              onDelete={this.handleEntryDeletion}\r\n              onVerify={this.handleVerification}\r\n              color={this.props.cardColor}\r\n              type=\"2\"\r\n            />\r\n          </div>\r\n        </li>\r\n      ));\r\n    }\r\n  }\r\n  // Returns the cards for challenges that are not done.\r\n  undoneContent() {\r\n    if (typeof this.state.undoneChall !== \"undefined\") {\r\n      return this.state.undoneChall.map(challenge => (\r\n        <li\r\n          key={challenge.challengeId}\r\n          style={{ margin: \"30px\", listStyleType: \"none\" }}\r\n        >\r\n          <div style={{ display: \" flex\", justifyContent: \"center\" }}>\r\n            <ExpandableCard\r\n              challenge={challenge}\r\n              type=\"0\"\r\n              onCompletion={this.handleCompletion}\r\n              onDeletion={this.handleDeletion}\r\n              color={this.props.cardColor}\r\n              admin={this.state.user.role}\r\n            />\r\n          </div>\r\n        </li>\r\n      ));\r\n    }\r\n  }\r\n  // Handles the changing of tabs.\r\n  handleTabChange = (event, newValue) => {\r\n    this.setState({\r\n      tabValue: newValue\r\n    });\r\n  };\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { tabValue } = this.state;\r\n    return (\r\n      <div>\r\n        <AppBar\r\n          className={classes.appbar}\r\n          style={{ backgroundColor: this.state.barColor }}\r\n          position=\"static\"\r\n        >\r\n          <Tabs\r\n            TabIndicatorProps={{\r\n              style: { backgroundColor: \"#000\", height: \"3px\" }\r\n            }}\r\n            centered\r\n            value={tabValue}\r\n            onChange={this.handleTabChange}\r\n          >\r\n            <Tab label=\"Incompleted\" />\r\n\r\n            <Tab label=\"Pending\" />\r\n            {this.state.user.role == 0 && <Tab label=\"Completed\" />}\r\n          </Tabs>\r\n        </AppBar>\r\n        {tabValue == 0 && this.undoneContent()}\r\n        {this.state.user.role == 1 ? (\r\n          <div>{tabValue == 1 && this.pendingContent()}</div>\r\n        ) : (\r\n          <div>\r\n            {tabValue == 1 && this.unverifiedContent()}\r\n            {tabValue == 2 && this.doneContent()}\r\n          </div>\r\n        )}\r\n\r\n        {this.state.user.role == 1 ? (\r\n          <Fab\r\n            color=\"primary\"\r\n            aria-label=\"Add\"\r\n            style={{\r\n              bottom: \"5%\",\r\n              right: \"5%\",\r\n              position: \"absolute\",\r\n              backgroundColor: this.state.barColor\r\n            }}\r\n            onClick={this.handleCreationClick}\r\n          >\r\n            <AddIcon />\r\n          </Fab>\r\n        ) : null}\r\n        {this.state.showCreatDialog && (\r\n          <CreationDialog\r\n            token={this.state.token}\r\n            onClose={this.handleCreationClick}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nChallengeList.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\nexport default withStyles(styles)(ChallengeList);\r\n","import React from \"react\";\r\nimport { Typography, Button, Paper } from \"@material-ui/core\";\r\n\r\nclass Tutorial extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Paper style={{ maxWidth: \"800px\" }}>\r\n        <div style={{ margin: \"30px\" }}>\r\n          <Typography align=\"center\" gutterBottom variant=\"h6\">\r\n            What is Fuksipassi?\r\n          </Typography>\r\n          <p>\r\n            Fuksipassi is a web application, where users can complete challenges\r\n            and upload pictures as proof of the completion. Anyone can create a\r\n            new area and start creating their challenges there.\r\n          </p>\r\n          <p>\r\n            To join another area after already joining some area, you have to\r\n            make a new user or delete your current one and register again to the\r\n            other area.\r\n          </p>\r\n          <Typography align=\"center\" gutterBottom variant=\"h6\">\r\n            Challenges\r\n          </Typography>\r\n          <p>\r\n            Incompleted challenges are found from the tab \"Incompleted\". You can\r\n            complete these challenges by pressing the button \"Complete\". Drag\r\n            and drop an image or choose from your folders to activate the\r\n            completion button. File size limit is 2 MB.\r\n          </p>\r\n          <p>\r\n            Pending tab shows challenges that have been completed, but which\r\n            haven't been verified by admins of the area. Admins can delete or\r\n            verify the challenge depending on how they decide.\r\n          </p>\r\n          <p>\r\n            For admins, pending tab shows all the completed, but not yet\r\n            verified challenges in their area. Email of the user is being shown\r\n            along with the image of the challenge.\r\n          </p>\r\n          <p>\r\n            Completed tab shows the challenges which have been verified and\r\n            accepted by admins. Images can be downloaded by expanding the card\r\n            and clicking the button \"Download image\".\r\n          </p>\r\n          <Typography align=\"center\" gutterBottom variant=\"h6\">\r\n            Hotkeys\r\n          </Typography>\r\n          <p>\r\n            There are number of hotkeys present to assist in using the web\r\n            application. They are listed below.\r\n          </p>\r\n          <ul>\r\n            <li>\r\n              <b>Insert</b>: Settings menu\r\n            </li>\r\n            <li>\r\n              <b>End</b>: Log out\r\n            </li>\r\n            <li>\r\n              <b>Delete</b>: See user list (Only for admins)\r\n            </li>\r\n            <li>\r\n              <b>Home</b>: Edit your user\r\n            </li>\r\n          </ul>\r\n          <Button\r\n            onClick={this.props.onClose}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n            Go back\r\n          </Button>\r\n        </div>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tutorial;\r\n","import React from \"react\";\r\nimport MuiThemeProvider from \"@material-ui/core/styles/MuiThemeProvider\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LoginForm from \"./Login.js\";\r\nimport ToolBar from \"@material-ui/core/AppBar\";\r\nimport Settings from \"./Settings.js\";\r\nimport LogoutIcon from \"@material-ui/icons/Input\";\r\nimport UndoIcon from \"@material-ui/icons/Undo\";\r\nimport RedoIcon from \"@material-ui/icons/Redo\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport HelpIcon from \"@material-ui/icons/Help\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport UserList from \"./UserList\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport ProfileDialog from \"./ProfileDialog.js\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ChallengeList from \"./ChallengeList.js\";\r\nimport Tutorial from \"./Tutorial.js\";\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      // Value to tell if the user has logged in or not.\r\n      auth: false,\r\n      //  user that is logged in.\r\n      user: \"\",\r\n      // JSON web token\r\n      token: \"\",\r\n      // Color theme of the app bar\r\n      barColor: \"#FFBB4C\",\r\n      // Color of the challenge card\r\n      cardColor: \"#FFFF88\",\r\n      // Previous color theme\r\n      previousBarColor: \"\",\r\n      // Previous color of cards\r\n      previousCardColor: \"\",\r\n      //Boolean to toggle redo button\r\n      redo: false,\r\n      //Boolean to toggle undo button\r\n      undo: false,\r\n      // Toggle boolean for editing profile.\r\n      editProfile: false,\r\n      // Toggle boolean for viewing settings view.\r\n      showSettings: false,\r\n      // Toggle boolean for viewing settings view.\r\n      showUsers: false,\r\n      // Toggle for drawer opening\r\n      openDrawer: false,\r\n      // Toggle for opening help menu\r\n      showHelp: false,\r\n      // Sorting type for challenges\r\n      sortingType: 1\r\n    };\r\n   \r\n  }\r\n  // Function that runs when component is mounted\r\n  componentDidMount() {\r\n    // Add a key listener\r\n    window.addEventListener(\"keydown\", this.handleHotkey);\r\n    // Check local storage for saved color for app bar\r\n    if (localStorage.getItem(\"color\") !== null) {\r\n      this.setState({\r\n        barColor: localStorage.getItem(\"color\")\r\n      });\r\n    }\r\n    // Check local storage for card color\r\n    if (localStorage.getItem(\"cardColor\") !== null) {\r\n      this.setState({\r\n        cardColor: localStorage.getItem(\"cardColor\")\r\n      });\r\n    }\r\n    // Check local storage for sorting type for challenges.\r\n    if (localStorage.getItem(\"sortingType\") !== null) {\r\n      this.setState({\r\n        sortingType: localStorage.getItem(\"sortingType\")\r\n      });\r\n    }\r\n    // Check if the user has already logged in.\r\n    if (localStorage.getItem(\"session\") !== null) {\r\n      var session_obj = JSON.parse(localStorage.getItem(\"session\"));\r\n      var login_time = new Date(session_obj.timestamp);\r\n      // Get time when the user logged in for the first time during the session.\r\n      var then = new Date(login_time.setMinutes(login_time.getMinutes() + 15));\r\n      var now = new Date();\r\n      // Check if the user has been logged in under 15 minutes\r\n      if (now.getTime() < then.getTime()) {\r\n        // Set token and user into state\r\n        this.setState({\r\n          auth: true,\r\n          token: localStorage.getItem(\"token\"),\r\n          user: JSON.parse(localStorage.getItem(\"user\"))\r\n        });\r\n      }\r\n    }\r\n  }\r\n  // Runs when component is unmounting\r\n  componentWillUnmount() {\r\n    // Remove key listener\r\n    window.removeEventListener(\"keydown\", this.handleHotkey);\r\n  }\r\n\r\n  // Handles the hotkey presses\r\n  handleHotkey = e => {\r\n    // On Home\r\n    if (e.keyCode == 36) {\r\n      this.handleProfile();\r\n      // On End\r\n    } else if (e.keyCode == 35) {\r\n      this.handleLogout();\r\n      // On Delete\r\n    } else if (e.keyCode == 46 && this.state.user.role == 1) {\r\n      this.handleUserList();\r\n      //  On Insert\r\n    } else if (e.keyCode == 45) {\r\n      this.handleSettings();\r\n    }\r\n  };\r\n\r\n  // Method that is called after login. Sets token and other important information to state.\r\n  // Toggles MainMenu by setting auth => true.\r\n  setAuthenticate = (auth_user, token) => {\r\n    // Check that the user is not guest.\r\n    this.setState({\r\n      user: auth_user,\r\n      auth: true,\r\n      token: token\r\n    });\r\n    // Set token and user into local storage.\r\n    // Set timestamp to know when the data was saved into local storage.\r\n    localStorage.setItem(\"user\", JSON.stringify(auth_user));\r\n    localStorage.setItem(\"token\", token);\r\n    var session_obj = { timestamp: new Date().getTime() };\r\n    localStorage.setItem(\"session\", JSON.stringify(session_obj));\r\n  };\r\n\r\n  // Function to logout.\r\n  handleLogout = () => {\r\n    fetch(\"http://localhost:3000/api/logout\", {\r\n      method: \"GET\",\r\n      mode: \"cors\",\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: \"Bearer \" + this.state.token\r\n      },\r\n      cache: \"no-cache\"\r\n    }).then(\r\n      this.setState({\r\n        token: null,\r\n        auth: false,\r\n        editProfile: false\r\n      })\r\n    );\r\n    // Clear local storage when logging out.\r\n    localStorage.clear();\r\n  };\r\n  // Toggles the profile editing dialog.\r\n  handleProfile = () => {\r\n    this.setState({\r\n      editProfile: !this.state.editProfile\r\n    });\r\n  };\r\n  // Changes the email of the user to the updated email.\r\n  handleEdit = email => {\r\n    var updatedUser = this.state.user;\r\n    updatedUser.email = email;\r\n    this.setState({\r\n      user: updatedUser\r\n    });\r\n  };\r\n  // Toggles the tutorial view.\r\n  handleHelp = () => {\r\n    this.setState({\r\n      showHelp: !this.state.showHelp\r\n    });\r\n  };\r\n  // Toggles the drawer open and close.\r\n  handleDrawerToggle = () => {\r\n    this.setState({\r\n      openDrawer: !this.state.openDrawer\r\n    });\r\n  };\r\n  // Handles the toggle of settings menu\r\n  handleSettings = () => {\r\n    this.setState({\r\n      showSettings: !this.state.showSettings\r\n    });\r\n  };\r\n  // Handles the toggle of user list.\r\n  handleUserList = () => {\r\n    this.setState({\r\n      showUsers: !this.state.showUsers\r\n    });\r\n  };\r\n  // Handles the undo button press\r\n  handleUndo = () => {\r\n    this.setState({\r\n      previousCardColor: this.state.cardColor,\r\n      previousBarColor: this.state.barColor,\r\n      barColor: this.state.previousBarColor,\r\n      cardColor: this.state.previousCardColor,\r\n      undo: false,\r\n      redo: true\r\n    });\r\n  };\r\n  // Handles the redo button press\r\n  handleRedo = () => {\r\n    this.setState({\r\n      previousCardColor: this.state.cardColor,\r\n      previousBarColor: this.state.barColor,\r\n      barColor: this.state.previousBarColor,\r\n      cardColor: this.state.previousCardColor,\r\n      redo: false,\r\n      undo: true\r\n    });\r\n  };\r\n  // Handles the theme color changing from settings view\r\n  handleSettingsSave = (sorting,barColor,cardColor) => {\r\n    let setUndo = false;\r\n    // See if color was changed at all or if it was the same as it used to be. Only undo if it was changed.\r\n    if (localStorage.getItem(\"color\") != barColor && barColor != this.state.barColor) {\r\n      setUndo = true;\r\n    }\r\n    if (localStorage.getItem(\"cardColor\") != cardColor && cardColor != this.state.cardColor) {\r\n      setUndo = true;\r\n    }\r\n    // Save colors and sorting method into local storage, so they don't get lost when refreshing page.\r\n    localStorage.setItem(\"color\", barColor);\r\n    localStorage.setItem(\"cardColor\", cardColor);\r\n    localStorage.setItem(\"sortingType\", sorting);\r\n    this.setState({\r\n      redo: false,\r\n      undo: setUndo,\r\n      previousCardColor: this.state.cardColor,\r\n      previousBarColor: this.state.barColor,\r\n      barColor: barColor,\r\n      cardColor: cardColor,\r\n      sortingType: sorting\r\n    });\r\n    // Close settings view\r\n    this.handleSettings();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        \r\n          {this.state.auth ? (\r\n            <div>\r\n              {this.state.showSettings ||\r\n              this.state.showUsers ||\r\n              this.state.showHelp ? (\r\n                <div>\r\n                  {this.state.showSettings && (\r\n                    <div style={{ display: \" flex\", justifyContent: \"center\" }}>\r\n                      <Settings\r\n                        barColor={this.state.barColor}\r\n                        cardColor={this.state.cardColor}\r\n                        sorting={this.state.sortingType}\r\n                        onClose={this.handleSettings}\r\n                        onSave={this.handleSettingsSave}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                  {this.state.showUsers && (\r\n                    <div style={{ display: \" flex\", justifyContent: \"center\" }}>\r\n                      <UserList\r\n                        onClose={this.handleUserList}\r\n                        token={this.state.token}\r\n                        user={this.state.user}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                  {this.state.showHelp && (\r\n                    <div style={{ display: \" flex\", justifyContent: \"center\" }}>\r\n                      <Tutorial onClose={this.handleHelp} />\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              ) : (\r\n                <div>\r\n                  <ToolBar\r\n                    position=\"static\"\r\n                    style={{ backgroundColor: this.state.barColor }}\r\n                  >\r\n                    <Drawer\r\n                      onClick={this.handleDrawerToggle}\r\n                      width={300}\r\n                      open={this.state.openDrawer}\r\n                    >\r\n                      <MenuItem onClick={this.handleSettings}>\r\n                        Settings\r\n                      </MenuItem>\r\n                      {this.state.user.role ? (\r\n                        <MenuItem onClick={this.handleUserList}>\r\n                          List of users\r\n                        </MenuItem>\r\n                      ) : null}\r\n                    </Drawer>\r\n                    <div style={{ display: \"flex\" }}>\r\n                      <IconButton onClick={this.handleDrawerToggle}>\r\n                        <MenuIcon />\r\n                      </IconButton>\r\n                      <Typography style={{ margin: 20 }}>\r\n                        Logged in as {this.state.user.email}\r\n                      </Typography>\r\n                      <Typography style={{ margin: 20 }}>\r\n                        Current area: <b> {this.state.user.area}</b>\r\n                      </Typography>\r\n                      <IconButton onClick={this.handleLogout}>\r\n                        <LogoutIcon />\r\n                      </IconButton>\r\n                      <IconButton onClick={this.handleProfile}>\r\n                        <AccountCircleIcon />\r\n                      </IconButton>\r\n                      <IconButton\r\n                        disabled={!this.state.undo}\r\n                        onClick={this.handleUndo}\r\n                      >\r\n                        <UndoIcon />\r\n                      </IconButton>\r\n                      <IconButton\r\n                        disabled={!this.state.redo}\r\n                        onClick={this.handleRedo}\r\n                      >\r\n                        <RedoIcon />\r\n                      </IconButton>\r\n                      <IconButton onClick={this.handleHelp}>\r\n                        <HelpIcon/>\r\n                      </IconButton>\r\n                    </div>\r\n                  </ToolBar>\r\n                  <ChallengeList\r\n                    sortingType={this.state.sortingType}\r\n                    user={this.state.user}\r\n                    token={this.state.token}\r\n                    onLogout={this.handleLogout}\r\n                    color={this.state.barColor}\r\n                    cardColor={this.state.cardColor}\r\n                  />\r\n                  {this.state.editProfile && (\r\n                    <ProfileDialog\r\n                      targetUser={this.state.user}\r\n                      currentUser={this.state.user}\r\n                      token={this.state.token}\r\n                      onClose={this.handleProfile}\r\n                      onDelete={this.handleLogout}\r\n                      onEdit={this.handleEdit}\r\n                    />\r\n                  )}\r\n                </div>\r\n              )}\r\n            </div>\r\n          ) : (\r\n            <Grid\r\n              container\r\n              spacing={0}\r\n              direction=\"column\"\r\n              alignItems=\"center\"\r\n              justify=\"center\"\r\n              style={{ minHeight: \"100vh\" }}\r\n            >\r\n              <Grid item xs={3}>\r\n                <LoginForm onAuthenticate={this.setAuthenticate} />\r\n              </Grid>\r\n            </Grid>\r\n          )}\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}